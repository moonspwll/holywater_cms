# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type BookEntity {
  authors: String!
  average_rating: Float!
  id: ID!
  isbn: String!
  isbn13: String!
  language_code: String!
  num_pages: Float!
  publication_date: DateTime!
  publisher: String!
  ratings_count: Float!
  text_reviews_count: Float!
  title: String!
  user_id: ID!
}

type BookSearchResponse {
  books: [BookEntity!]!
  page: Int!
  total: Int!
}

input CreateBookDto {
  authors: String!
  average_rating: Float!
  isbn: String!
  isbn13: String!
  language_code: String!
  num_pages: Int!
  publication_date: String!
  publisher: String!
  ratings_count: Int!
  text_reviews_count: Int!
  title: String!
}

input CreateUserDto {
  bio: String
  email: String!
  image: String
  password: String!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginUserDto {
  password: String!
  username: String!
}

type Mutation {
  createBook(createBookDto: CreateBookDto!): BookEntity!
  deleteBook(id: Int!): BookEntity!
  login(loginUserDto: LoginUserDto!): UserEntity!
  register(createUserDto: CreateUserDto!): UserEntity!
  updateBook(updateBookDto: UpdateBookDto!): BookEntity!
}

type Query {
  getBooks(searchBooksDto: SearchBooksDto!): BookSearchResponse!
  getHello: String!
  getUserById(id: String!): UserEntity!
}

input SearchBooksDto {
  authors: String
  average_rating: Float
  num_pages: Int
  order: String
  page: Int
  page_size: Int
  publication_date: String
  sort_by: String
  title: String
}

input UpdateBookDto {
  authors: String
  average_rating: Float
  id: Int!
  isbn: String
  isbn13: String
  language_code: String
  num_pages: Int
  publication_date: DateTime
  publisher: String
  ratings_count: Int
  text_reviews_count: Int
  title: String
}

type UserEntity {
  bio: String!
  books: [BookEntity!]
  email: String!
  id: ID!
  image: String!
  role: UserRole!
  token: String!
  username: String!
}

enum UserRole {
  ADMIN
  MODERATOR
  USER
}